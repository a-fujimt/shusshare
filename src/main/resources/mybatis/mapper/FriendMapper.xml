<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.akichil.shusshare.repository.mybatis.FriendMapper">

    <resultMap id="FriendDetail" type="net.akichil.shusshare.entity.FriendDetail">
        <result property="accountIdFrom" column="account_id_from"/>
        <result property="accountIdTo" column="account_id_to"/>
        <result property="accountId" column="account_id"/>
        <result property="userId" column="user_id"/>
        <result property="userName" column="user_name"/>
        <result property="profilePhotoUrl" column="profile_photo_url"/>
        <result property="status" column="status"/>
        <result property="lockVersion" column="lock_version"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <select id="findAllUser" resultMap="FriendDetail">
        SELECT
            f.account_id_from AS account_id_from,
            f.account_id_to AS account_id_to,
            a.account_id AS account_id,
            a.user_id AS user_id,
            a.user_name AS user_name,
            a.profile_photo_url AS profile_photo_url,
            f.status AS status
        FROM
            account a
            LEFT OUTER JOIN
                (SELECT
                    account_id_from,
                    account_id_to,
                    status
                FROM
                    friend
                WHERE
                    account_id_from = #{accountIdFrom}
                ) AS f
            ON a.account_id = f.account_id_to
        <where>
            <if test="userName != null">
                (a.user_name LIKE CONCAT('%', #{userName}, '%')
                OR
                a.user_id LIKE CONCAT('%', #{userName}, '%'))
            </if>
            <if test="accountIdFrom">
                AND
                a.account_id != #{accountIdFrom}
            </if>
            AND
            a.status != '${@net.akichil.shusshare.entity.AccountStatus@DELETED.getValue}'
        </where>
    </select>

    <select id="findFriendsFromUser" resultMap="FriendDetail">
        SELECT
            f.account_id_from AS account_id_from,
            f.account_id_to AS account_id_to,
            f.account_id_to AS account_id,
            a.user_id AS user_id,
            a.user_name AS user_name,
            a.profile_photo_url AS profile_photo_url,
            f.status AS status
        FROM
            account a
            INNER JOIN friend f
            ON a.account_id = f.account_id_to
        WHERE
            f.account_id_from = #{id}
    </select>

    <select id="findFriendsToUser" resultMap="FriendDetail">
        SELECT
            f.account_id_from AS account_id_from,
            f.account_id_to AS account_id_to,
            f.account_id_from AS account_id,
            a.user_id AS user_id,
            a.user_name AS user_name,
            a.profile_photo_url AS profile_photo_url,
            f.status AS status
        FROM
            account a
            INNER JOIN friend f
            ON a.account_id = f.account_id_from
        WHERE
            f.account_id_to = #{id}
            AND
            a.status != '${@net.akichil.shusshare.entity.AccountStatus@DELETED.getValue}'
    </select>

    <select id="findFriendByAccountId" resultMap="FriendDetail">
        SELECT
            a.account_id AS account_id,
            a.user_id AS user_id,
            a.user_name AS user_name,
            a.profile_photo_url AS profile_photo_url,
            f.account_id_from AS account_id_from,
            f.account_id_to AS account_id_to,
            f.status AS status
        FROM
            account a
            LEFT OUTER JOIN
            (SELECT
                account_id_from,
                account_id_to,
                status
            FROM
                friend
            WHERE
                account_id_from = #{accountIdFrom}
            ) AS f
            ON a.account_id = f.account_id_to
        WHERE
            a.account_id = #{accountId}
            AND
            a.status != '${@net.akichil.shusshare.entity.AccountStatus@DELETED.getValue}'
    </select>

    <insert id="insert">
        INSERT INTO friend(
            account_id_from,
            account_id_to,
            status
        )
        VALUES(
            #{accountIdFrom},
            #{accountIdTo},
            #{status}
        )
    </insert>

    <update id="update">
        UPDATE
            friend
        SET
            <if test="status != null">
                status = #{status},
            </if>
            lock_version = lock_version + 1,
            updated_at = CURRENT_TIMESTAMP
        WHERE
            account_id_from = #{accountIdFrom}
            AND
            account_id_to = #{accountIdTo}
            AND
            lock_version = #{lockVersion}
    </update>

    <delete id="delete">
        DELETE FROM
            friend
        WHERE
            account_id_from = #{accountIdFrom}
            AND
            account_id_to = #{accountIdTo}
            AND
            lock_version = #{lockVersion}
    </delete>

</mapper>